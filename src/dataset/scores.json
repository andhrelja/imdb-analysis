[
    {
        "name": "Decision Tree Classifier",
        "Classifier": "DecisionTreeClassifier()",
        "dataset": "balanced",
        "params": {
            "random_state": null,
            "max_depth": null
        },
        "train_score": 0.92,
        "test_score": 0.58
    },
    {
        "name": "Decision Tree Classifier",
        "Classifier": "DecisionTreeClassifier()",
        "dataset": "imbalanced",
        "params": {
            "random_state": null,
            "max_depth": null
        },
        "train_score": 0.92,
        "test_score": 0.57
    },
    {
        "name": "Decision Tree Classifier",
        "Classifier": "DecisionTreeClassifier(max_depth=10, random_state=420)",
        "dataset": "imbalanced",
        "params": {
            "random_state": 420,
            "max_depth": 10
        },
        "train_score": 0.38,
        "test_score": 0.38
    },
    {
        "name": "Decision Tree Classifier",
        "Classifier": "DecisionTreeClassifier(max_depth=20, random_state=42)",
        "dataset": "balanced",
        "params": {
            "random_state": 42,
            "max_depth": 20
        },
        "train_score": 0.49,
        "test_score": 0.42
    },
    {
        "name": "Decision Tree Classifier",
        "Classifier": "DecisionTreeClassifier(max_depth=30, random_state=42)",
        "dataset": "imbalanced",
        "params": {
            "random_state": 42,
            "max_depth": 30
        },
        "train_score": 0.68,
        "test_score": 0.49
    },
    {
        "name": "Random Forest Classifier",
        "Classifier": "RandomForestClassifier(n_jobs=-1, random_state=42)",
        "dataset": "balanced",
        "params": {
            "random_state": 42,
            "max_depth": null,
            "n_jobs": -1
        },
        "train_score": 0.92,
        "test_score": 0.57
    },
    {
        "name": "Random Forest Classifier",
        "Classifier": "RandomForestClassifier(n_jobs=-1, random_state=42)",
        "dataset": "imbalanced",
        "params": {
            "random_state": 42,
            "max_depth": null,
            "n_jobs": -1
        },
        "train_score": 0.92,
        "test_score": 0.57
    },
    {
        "name": "Random Forest Classifier",
        "Classifier": "RandomForestClassifier(max_depth=10, n_jobs=-1, random_state=420)",
        "dataset": "imbalanced",
        "params": {
            "random_state": 420,
            "max_depth": 10,
            "n_jobs": -1
        },
        "train_score": 0.39,
        "test_score": 0.38
    },
    {
        "name": "Random Forest Classifier",
        "Classifier": "RandomForestClassifier(max_depth=20, n_jobs=-1, random_state=42)",
        "dataset": "balanced",
        "params": {
            "random_state": 42,
            "max_depth": 20,
            "n_jobs": -1
        },
        "train_score": 0.5,
        "test_score": 0.43
    },
    {
        "name": "Random Forest Classifier",
        "Classifier": "RandomForestClassifier(max_depth=30, n_jobs=-1, random_state=42)",
        "dataset": "imbalanced",
        "params": {
            "random_state": 42,
            "max_depth": 30,
            "n_jobs": -1
        },
        "train_score": 0.65,
        "test_score": 0.48
    },
    {
        "name": "MLP Classifier",
        "Classifier": "MLPClassifier(alpha=0.001, early_stopping=True, hidden_layer_sizes=(3, 1),\n              max_iter=100, random_state=420, solver='lbfgs')",
        "dataset": "balanced",
        "params": {
            "random_state": 420,
            "hidden_layer_sizes": [
                3,
                1
            ],
            "solver": "lbfgs",
            "alpha": 0.001,
            "max_iter": 100,
            "early_stopping": true
        },
        "train_score": 0.2,
        "test_score": 0.2
    },
    {
        "name": "MLP Classifier",
        "Classifier": "MLPClassifier(alpha=0.001, early_stopping=True, hidden_layer_sizes=(3, 1),\n              max_iter=100, random_state=420, solver='lbfgs')",
        "dataset": "imbalanced",
        "params": {
            "random_state": 420,
            "hidden_layer_sizes": [
                3,
                1
            ],
            "solver": "lbfgs",
            "alpha": 0.001,
            "max_iter": 100,
            "early_stopping": true
        },
        "train_score": 0.2,
        "test_score": 0.2
    },
    {
        "name": "MLP Classifier",
        "Classifier": "MLPClassifier(alpha=1e-05, early_stopping=True, hidden_layer_sizes=(2, 1),\n              max_iter=100, random_state=420)",
        "dataset": "imbalanced",
        "params": {
            "random_state": 420,
            "hidden_layer_sizes": [
                2,
                1
            ],
            "solver": "adam",
            "alpha": 1e-05,
            "max_iter": 100,
            "early_stopping": true
        },
        "train_score": 0.2,
        "test_score": 0.2
    },
    {
        "name": "MLP Classifier",
        "Classifier": "MLPClassifier(early_stopping=True, hidden_layer_sizes=(2, 1),\n              learning_rate='adaptive', random_state=420, solver='sgd')",
        "dataset": "balanced",
        "params": {
            "random_state": 420,
            "hidden_layer_sizes": [
                2,
                1
            ],
            "solver": "sgd",
            "alpha": 0.0001,
            "learning_rate": "adaptive",
            "max_iter": 200,
            "early_stopping": true
        },
        "train_score": 0.2,
        "test_score": 0.2
    },
    {
        "name": "MLP Classifier",
        "Classifier": "MLPClassifier(alpha=0.001, early_stopping=True, hidden_layer_sizes=(3, 1),\n              random_state=42, solver='lbfgs')",
        "dataset": "imbalanced",
        "params": {
            "random_state": 42,
            "hidden_layer_sizes": [
                3,
                1
            ],
            "solver": "lbfgs",
            "alpha": 0.001,
            "max_iter": 200,
            "early_stopping": true
        },
        "train_score": 0.2,
        "test_score": 0.2
    },
    {
        "name": "Multinomial Logistic Regression",
        "Classifier": "LogisticRegression(max_iter=500, multi_class='multinomial', penalty='none',\n                   random_state=420)",
        "dataset": "balanced",
        "params": {
            "random_state": 420,
            "penalty": "none",
            "solver": "lbfgs",
            "multi_class": "multinomial",
            "max_iter": 500
        },
        "train_score": 0.2,
        "test_score": 0.2
    },
    {
        "name": "Multinomial Logistic Regression",
        "Classifier": "LogisticRegression(max_iter=500, multi_class='multinomial', penalty='none',\n                   random_state=420)",
        "dataset": "imbalanced",
        "params": {
            "random_state": 420,
            "penalty": "none",
            "solver": "lbfgs",
            "multi_class": "multinomial",
            "max_iter": 500
        },
        "train_score": 0.2,
        "test_score": 0.2
    },
    {
        "name": "Multinomial Logistic Regression",
        "Classifier": "LogisticRegression(max_iter=500, multi_class='multinomial', random_state=42)",
        "dataset": "balanced",
        "params": {
            "random_state": 42,
            "penalty": "l2",
            "solver": "lbfgs",
            "multi_class": "multinomial",
            "max_iter": 500
        },
        "train_score": 0.2,
        "test_score": 0.2
    },
    {
        "name": "Multinomial Logistic Regression",
        "Classifier": "LogisticRegression(max_iter=500, multi_class='multinomial', random_state=42)",
        "dataset": "imbalanced",
        "params": {
            "random_state": 42,
            "penalty": "l2",
            "solver": "lbfgs",
            "multi_class": "multinomial",
            "max_iter": 500
        },
        "train_score": 0.2,
        "test_score": 0.2
    }
]